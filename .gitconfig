[user]
	name = b1f6c1c4
	email = b1f6c1c4@gmail.com
	signingKey = 56E8F3660C5EA492F1B47251B733A45639BA98FF
[sendpack]
	sideband = false
[core]
	excludesfile = ~/.gitignore
	editor = vim
[color]
	ui = auto
[http]
	postBuffer = 524288000
	# proxy = http://localhost:1081
[https]
	# proxy = http://localhost:1081
[alias]
	branches = branch -av
	remotes = remote -v
	lg = log --color --graph --pretty=tformat:'%Cred%h%Creset -%C(magenta)%d %Cgreen(%aI)%Creset %s %C(bold blue)<%an>%G?<%cn>%Creset' --abbrev-commit
	la = log --color --graph --pretty=tformat:'%Cred%h%Creset -%C(magenta)%d %Cgreen(%aI)%Creset %s %C(bold blue)<%an>%G?<%cn>%Creset' --abbrev-commit --all
	ls = log --color --graph --pretty=tformat:'%Cred%h%Creset -%C(magenta)%d %Cgreen(%aI)%Creset %s %C(bold blue)<%an>%G?<%cn>%Creset' --abbrev-commit --decorate --numstat
	lf = log -p
	fe = fetch
	ch = cherry -v
	orphan-worktree = "!git worktree add --no-checkout --detach ../${1} && git symbolic-ref worktrees/${1}/HEAD refs/heads/${1} && git --work-tree=../${1} reset -q && echo "
	d = diff
	dc = diff --cached
	c = diff --cached
	pf = pull --ff-only
	fp = fetch -p
	fpa = fetch --prune --all
	clones = clone --depth 1 --no-tags
	br = branch
	a = add
	ap = add -p
	cm = commit -uno
	cma = commit -uno --amend
	cmna = commit --amend -C HEAD
	ca = commit -uno -a
	cama = commit -uno -a --amend
	camna = commit -a --amend -C HEAD
	ac = !git add -A && git commit
	acma = !git add -A && git commit --amend
	acmna = !git add -A && git commit --amend -C HEAD
	pu = push
	pt = push --tags
	pnf = push --force-with-lease
	cp = cherry-pick
	cpnc = cherry-pick --no-commit
	mf = merge --ff-only
	mnf = merge --no-ff
	mnfnc = merge --no-ff --no-commit
	mnfss = merge --no-ff -s subtree
	mnfncss = merge --no-ff --no-commit -s subtree
	mnfssx = !git merge --no-ff -s subtree -X subtree=${1}
	fuck = !git add -A && git commit --amend -C HEAD && git push --force-with-lease
	st = status -sb
	s = status -sb --no-renames --ignore-submodules=all --untracked-files=no
	t = status -sb --no-renames --ignore-submodules=all
	sb = show-branch
	sba = show-branch -a
	ass = update-index --assume-unchanged --
	unass = update-index --no-assume-unchanged --
	skip = update-index --skip-worktree --
	unskip = update-index --no-skip-worktree --
	r = restore --source
	rs = restore --source HEAD --staged
	rsp = restore --source HEAD --staged -p
	rw = restore --worktree
	rwp = restore --worktree -p
	rsw = restore --source HEAD --staged --worktree
	sw = switch
	de = switch --detach
	its = "!bash -c 'git branch -f \"$1\" HEAD && git switch \"$1\"' ''"
	sh = "!bash -c '[ $# -eq 0 ] && git sh HEAD || (git diff-tree --color=always -p \"$1^1\" \"$1\" | less)' ''"
	ff = "!bash -c 'git merge-base --is-ancestor \"$1\" \"$2\" && git branch -f \"$1\" \"$2\" && echo \"$(git rev-parse \"$1@{1}\")\" \"->\" \"$(git rev-parse $2)\" || (echo FAIL && false)' ''"
	greps = "!bash -c '(git --no-pager grep --color=always \"$@\" -- :/; git submodule foreach --recursive \"$(printf \"%s || true\" \"$(printf \"%q \" git --no-pager greps --color=always \"$@\")\" )\") | less' ''"
	find = "!git ls-files -- :/ | grep --color=always"
	finds = "!(git ls-files; git submodule foreach --recursive \"git ls-files\") | awk -F '/' \"{ if (match(\\$0, /^Entering '(.*)'\\$/, ary)) { P=ary[1]; sep=\\\"/\\\" } else { printf \\\"%s%s%s\\\\n\\\",P,sep,\\$0; } }\" | grep --color=always"
	onto = "!bash -c 'git update-ref ONTO_TMP HEAD && git rebase -i $1 $2 --onto ONTO_TMP && git branch -f $1 ONTO_TMP && git switch $1' ''"
	ignore = !vim `git rev-parse --git-dir`/info/exclude
	suir = submodule update --init --recursive
	sub = submodule
	sync = submodule sync
	with-ng = "!\"$SHELL\" -c 'echo -e \"\\e[100m\\e[1m\\e[91m!!!!!INSECURE!!!!!\\e[0m\"; A=\"$(mktemp -d)\"; git worktree add \"$A\" \"$@\" && git worktree list && (unset GIT_DIR; cd \"$A\"; printf \"$ cd \"; pwd; git status; \"$SHELL\"); git worktree remove -f \"$A\"; git worktree list; printf \"$ cd \"; pwd' ''"
	with = "!\"$SHELL\" -c 'A=\"$(mktemp -d)\"; chgrp \"$(stat -c \"%g\" \"$(git rev-parse --git-dir)\")\" \"$A\"; chmod go-rw,g+xs \"$A\"; setfacl -m 'default:group::--x' -m 'default:other::---' \"$A\"; git worktree add \"$A\" \"$@\" && git worktree list && (unset GIT_DIR; cd \"$A\"; printf \"$ cd \"; pwd; git status; \"$SHELL\"); git worktree remove -f \"$A\"; git worktree list; printf \"$ cd \"; pwd' ''"
[credential]
	helper = cache
[diff]
	wsErrorHighlight = all
[uploadpack]
	allowFilter = true
[protocol]
	version = 2
[rebase]
	autosquash = true
# vim: set noexpandtab:
